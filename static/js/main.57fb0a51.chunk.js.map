{"version":3,"sources":["USAState/USAState.tsx","comparisonData.tsx","ComparisonContainer/ComparisonContainer.tsx","Stat/Stat.tsx","ComparisonCard/ComparisonCard.tsx","ComparisonDetails/ComparisonDetails.tsx","App/App.tsx","apiCalls.tsx","utilities/utilities.tsx","index.tsx"],"names":["USAState","prop","className","date","comparisonData","id","category","data","title","subtitle","deaths","image","source","ComparisonContainer","useState","dropdownValue","setDropdownValue","styleId","data-testid","onChange","event","target","value","disabled","selected","map","to","onClick","handleComparisonClick","Stat","toLowerCase","icon","size","number","details","ComparisonCard","text","body","ComparisonDetails","stateDeathIcons","comparisonDeathIcons","setComparisonDeathIcons","useEffect","window","scrollTo","convertDeaths","Number","selection","conversion","numDeaths","deathConversion","Math","floor","displayDeaths","arrayLength","length","newIcon","push","generateComparisonText","deathRatio","toFixed","Intl","NumberFormat","format","String","usaStateDeaths","calculateDeathRatio","percentOfAllUSADeaths","totalUSADeaths","compareStateDeathsToUSADeaths","App","props","retrieveUSAData","fetch","then","response","ok","Error","json","simplifiedUSAData","positive","death","hospitalizedCurrently","simplifyAPIDataForAllStates","setState","allUSAData","catch","console","error","formatDate","state","selectedUSAState","rawDate","toString","year","substring","month","day","comparisonStats","find","datum","selectedComparison","createRouteEndpoints","reduce","comparisonCategory","cat","clearSelectedComparison","simplifiedStateData","simplifyAPIDataForSingleState","this","exact","path","RiVirusFill","GiCoffin","RiHospitalFill","render","Component","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.57fb0a51.chunk.js","sourcesContent":["import './USAState.scss';\n\nconst USAState = (prop: { date?: string }) => {\n  return(\n    <section>\n      <section className='title-info'>\n        <h1 className='state-image'></h1>\n        <h2 className='state-name'>Colorado</h2>\n      </section>\n      <h3 className='date'>Information for { prop.date }</h3>\n    </section>\n  )\n}\n\nexport default USAState;","export type ComparisonCategory = 'pearl-harbor' | 'sept11'| 'heart-disease' \n  | 'car-crash-fatalities-2020' | 'flu-fatalities-2018' | 'hurricane-katrina'\n\nexport type ComparisonData = {\n  [key: string]: string | number\n}\n\nexport interface Comparison {\n  id: number,\n  category: ComparisonCategory | string,\n  data: ComparisonData\n}\n\nexport const comparisonData: Comparison[] = [\n  {\n    id: 1,\n    category: 'sept11', \n    data: {\n      title: 'September 11th Deaths',\n      subtitle: 'September 11th',\n      deaths: 2974,\n      image: '',\n      source: 'https://www.britannica.com/event/September-11-attacks'\n    }\n  } , {\n    id: 2,\n    category: 'pearl-harbor', \n    data: {\n      title: 'Pearl Harbor Deaths',\n      subtitle: 'Pearl Harbor Deaths',\n      deaths: 2500,\n      image: '',\n      source: 'https://www.census.gov/history/pdf/pearl-harbor-fact-sheet-1.pdf'\n\n    }\n  } , {\n    id: 3,\n    category: 'heart-disease', \n    data: {\n      title: 'Colorado Heart Disease Deaths 2018',\n      subtitle: 'Colorado Heart Disease Deaths',\n      deaths: 7370,\n      image: '',\n      source: 'https://www.cdc.gov/nchs/pressroom/sosmap/heart_disease_mortality/heart_disease.htm'\n    }\n  } , {\n    id: 4,\n    category: 'car-crash-fatalities-2020', \n    data: {\n      title: 'Colorado Car Crash Fatalities 2020',\n      subtitle: 'Colorado Car Crash Fatalities',\n      deaths: 592,\n      image: '',\n      source: 'https://www.codot.gov/safety/traffic-safety/crash-data-management/fatal-crash-data'\n    }\n  } , {\n    id: 5,\n    category: 'flu-fatalities-2018', \n    data: {\n      title: 'Colorado Flu Fatalities 2018',\n      subtitle: 'Colorado Flu Fatalities',\n      deaths: 568,\n      image: '',\n      source: 'https://www.cdc.gov/nchs/pressroom/states/colorado/co.htm'\n    }\n  } , {\n    id: 6,\n    category: 'hurricane-katrina', \n    data: {\n      title: 'Hurricane Katrina Fatalities',\n      subtitle: 'Hurricane Katrina Fatalities',\n      deaths: 1833,\n      image: '',\n      source: 'https://www.nhc.noaa.gov/data/tcr/AL122005_Katrina.pdf'\n    }\n  }\n];","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { comparisonData } from '../comparisonData';\nimport './ComparisonContainer.scss';\n\nconst ComparisonContainer = (prop: { styleId: string, handleComparisonClick(dropdownValue: string): any}) => {\n  const [dropdownValue, setDropdownValue] = useState('')\n  \n  let handleChange = (event: any) => {\n    setDropdownValue(event.target.value)\n  }\n\n  const createDropdownValues = (): JSX.Element[] => {\n   return comparisonData.map(data => {\n      return(\n        <option \n          data-testid={`${data.id}`}\n          id={`dropdown-${data.id}`} \n          key={`dropdown-${data.id}`} \n          value={`${data.category}`}>\n            {`${data.data.title}`}\n        </option>\n      );  \n    })\n  }\n\n  return(\n    <section className={`${prop.styleId}-comparison-container`}>\n      <h3 className='comparison-title'>How Does It Compare?</h3>\n      <section>\n\n        <article id={`${prop.styleId}-description-container`}>\n          <section id={`${prop.styleId}-description`}>\n            <p>\n              The number of deaths from the coronavirus is astounding but is often hard to picture the magnitude of.\n            </p>\n            <p className='paragraph2'>\n              Select an event from the dropdown menu below to see how the deaths in this state compare to other castastrophic events in history.\n            </p>\n          </section>\n        </article>\n\n        <section id='dropdown-container'>\n          <select \n            id='dropdown' \n            data-testid='dropdown'\n            onChange={handleChange}>\n            <option \n              id='dropdown-default'\n              key='dropdown-default'\n              value='select-a-comparison'\n              disabled\n              selected>\n              Select a Comparison Category\n            </option>  \n            {createDropdownValues()}\n          </select>\n          <section>\n            <Link to={`/${dropdownValue}`}>\n              <button id='comparison-button' onClick={() => prop.handleComparisonClick(dropdownValue)}>View Comparison</button>\n            </Link>\n          </section>\n        </section>\n      </section>\n    </section>\n  )\n}\n\nexport default ComparisonContainer;","import './Stat.scss';\n\nconst Stat = (prop: { icon: any, number: string, title: string, details: string }) => {\n  return(\n    <section className='stats' data-testid={prop.title.toLowerCase()}>\n      <p className={prop.title.toLowerCase()}>{ <prop.icon size={100}/> }</p>\n      <h3 className='stats-number'>{ prop.number }</h3>\n      <h3 className='stats-title'>{ prop.title }</h3>\n      <h3 className='stats-details'>{ prop.details }</h3>\n    </section>\n  )\n}\n\nexport default Stat;","import './ComparisonCard.scss';\n\nconst ComparisonCard = (prop: {title?: string, body?: JSX.Element[], text?: JSX.Element, styleId: string, source?: string}) => {\n  const generateComparisonCards = () => {\n    return(\n      <section>\n        <section className={`${prop.styleId}-cards cards`}>\n          <section>\n            <p className='card-title'>{prop.title}</p>\n          </section>\n          <section>{prop.text}</section>\n          <section className={`${prop.styleId}-body`}>{prop.body}</section>\n        </section>\n        <section className='source'>{prop.source}</section>\n      </section>\n    )\n  }\n\n  return(\n    <section>\n      {generateComparisonCards()}\n    </section>\n  )\n}\n\n\nexport default ComparisonCard;","import React, { useEffect, useState } from 'react';\nimport ComparisonCard from '../ComparisonCard/ComparisonCard';\nimport './ComparisonDetails.scss';\nimport { Comparison } from '../comparisonData';\nimport { FaMale } from 'react-icons/fa';\n\nconst ComparisonDetails = (prop: { selection?: Comparison, usaStateDeaths: number, totalUSADeaths: number }) => {\n  const [stateDeathIcons] = useState<any>([])\n  const [comparisonDeathIcons, setComparisonDeathIcons] = useState<any>([])\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  })\n\n  useEffect(() => {\n    setComparisonDeathIcons([])\n    convertDeaths(comparisonDeathIcons, Number(prop.selection?.data.deaths))\n  }, [Number(prop.selection?.data.deaths)])\n\n const convertDeaths = (conversion: JSX.Element[], numDeaths: number): JSX.Element[] => {\n    let deathConversion = Math.floor(numDeaths/50)\n    let arrayLength = deathConversion\n    return displayDeaths(conversion, deathConversion, arrayLength)\n  }\n  \n  const displayDeaths = (conversion: JSX.Element[], deathConversion: number, arrayLength: number): JSX.Element[] => { \n    if (deathConversion >= 0 && conversion.length < arrayLength) {\n      let newIcon: JSX.Element = <p className='people-icon' key={`${deathConversion}`}><FaMale size={20}/></p>\n      conversion.push(newIcon)\n\n      return displayDeaths(conversion, deathConversion - 1, arrayLength)\n    }\n    return conversion\n  }\n\n  \n  const compareStateDeathsToUSADeaths = () => {\n    let percentOfAllUSADeaths = prop.usaStateDeaths / prop.totalUSADeaths;\n    return (\n      <p>The number of deaths due to COVID-19 in the state of Colorado account\n        for <span className='comparison-nums'>{ (percentOfAllUSADeaths * 100).toFixed(1) }%</span> of all deaths in the United States.\n      </p>\n    )\n  }\n\n  const calculateDeathRatio = () => {\n    if (typeof prop.selection?.data.deaths === 'number') {\n      let deathRatio = (prop.usaStateDeaths / prop.selection.data.deaths)\n      return generateComparisonText(deathRatio)\n    } \n    return <p>Sorry no data available at this time.</p>\n  }\n\n  const generateComparisonText = (deathRatio: number): JSX.Element => {\n    if(deathRatio < 1) {\n      return(\n        <section>\n          <p className='comparison-text'>Despite the staggering number of COVID-19 deaths in 2020, COVID-19 \n            deaths are only equivalent to <span className='comparison-nums'>{ (deathRatio).toFixed(1) }%</span> of all &nbsp;\n            {prop.selection?.data.title} deaths in all of the United States.\n          </p> \n        </section>\n      )\n    } else {\n      return(\n        <section>\n          <p className='comparison-text'>The number of COVID-19 deaths in Colorado is equivalent to <span className='comparison-nums'>{ deathRatio.toFixed(1) }</span> times the \n            number of all { prop.selection?.data.title }. \n          </p> \n        </section>\n      )\n    }\n  }\n\n  return(\n    <section>\n        <h1 className='key'><FaMale size={20}/> = 50 Deaths</h1>\n        <section className='main'>\n          <ComparisonCard\n            title={`${ prop.selection?.data.subtitle } saw ${new Intl.NumberFormat('en-US').format(Number(prop.selection?.data.deaths))} deaths.`}\n            body={convertDeaths(comparisonDeathIcons, Number(prop.selection?.data.deaths))}\n            styleId='usa-total-deaths'\n            source={String(prop.selection?.data.source)}\n            key='1'\n          />\n          <ComparisonCard\n            title={`This is compared to ${new Intl.NumberFormat('en-US').format(Number(prop.usaStateDeaths) )} deaths in Colorado to date.`}\n            body={convertDeaths(stateDeathIcons, prop.usaStateDeaths)}\n            styleId='usa-total-deaths'\n            source='https://api.covidtracking.com/'\n            key='2'\n          />\n          <ComparisonCard\n            text={calculateDeathRatio()}\n            styleId='usa-total-deaths'\n            key='3'\n          />\n          <ComparisonCard\n            text={compareStateDeathsToUSADeaths()}\n            styleId='usa-total-deaths'\n            key='4'\n          />\n      </section>\n    </section>\n  )\n}\nexport default ComparisonDetails;\n","import React, { Component } from 'react';\nimport USAState from '../USAState/USAState';\nimport ComparisonContainer from '../ComparisonContainer/ComparisonContainer';\nimport Stat from '../Stat/Stat';\nimport { fetchAllCurrentUSAData, fetchCurrentStateData } from '../apiCalls'\nimport { GiCoffin } from 'react-icons/gi';\nimport { RiVirusFill, RiHospitalFill } from 'react-icons/ri';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport { comparisonData, ComparisonCategory, Comparison } from '../comparisonData';\nimport { simplifyAPIDataForSingleState, simplifyAPIDataForAllStates } from '../utilities/utilities';\nimport './App.scss';\nimport ComparisonDetails from '../ComparisonDetails/ComparisonDetails';\n\ninterface Props { \n}\n\ninterface State {\n  allUSAData: Details, \n  selectedUSAState: Details,\n  selectedComparison?: Comparison\n}\n\ninterface Details {\n  date?: number,\n  state?: string,\n  positive: number,\n  hospitalizedCurrently: number,\n  death: number\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      allUSAData: {\n        positive: 0,\n        death: 0,\n        hospitalizedCurrently: 0\n      }, \n      selectedUSAState: {\n        date: 0, \n        state: '',\n        positive: 0,\n        hospitalizedCurrently: 0,\n        death: 0\n      },\n      selectedComparison: {\n        id: 0,\n        category: '',\n        data: {\n          title: '',\n          deaths: 0,\n          image: ''\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetchCurrentStateData()\n    .then(data => {\n      const simplifiedStateData = simplifyAPIDataForSingleState(data)\n      this.setState({ selectedUSAState: simplifiedStateData });\n    })\n    .catch(() => console.error);\n\n    this.retrieveUSAData()\n  }\n  \n  retrieveUSAData = () => {\n    fetchAllCurrentUSAData()\n    .then(data => {\n      const simplifiedUSAData = simplifyAPIDataForAllStates(data[0])\n      this.setState({ allUSAData: simplifiedUSAData })\n    })\n    .catch(() => console.error);\n  }\n  \n  formatDate = (): string => {\n    if (typeof this.state.selectedUSAState.date === 'number') {\n      let rawDate = this.state.selectedUSAState.date?.toString();\n      let year = rawDate.substring(0, 4);\n      let month = rawDate.substring(4, 6);\n      let day = rawDate.substring(6, 8);\n\n      let formattedDate = `${month}/${day}/${year}`;\n      return formattedDate;\n    }  \n    return '--/--/----';\n  }\n\n  handleComparisonClick = (dropdownValue: ComparisonCategory | string): void => {\n    let comparisonStats = comparisonData.find(datum => {\n      return datum.category === dropdownValue;\n    })\n    this.setState({ selectedComparison: comparisonStats })\n  }\n\n  createRouteEndpoints = (): string => {\n    let list = comparisonData.reduce((comparisonCategory, cat) => {\n      comparisonCategory += '|' + cat.category\n      return comparisonCategory\n    }, '')\n    return list\n  }\n\n  clearSelectedComparison = (): any => {\n    this.setState({ selectedComparison: {\n      id: 0,\n      category: '',\n      data: {\n        title: '',\n        deaths: 0,\n        image: ''\n      }\n    }})\n  }\n\n  render() {\n    return(\n      <>\n        <header>\n          <NavLink \n            to='/' \n            className='header'\n            onClick={this.clearSelectedComparison}> \n            <h1 className='title'>C🦠C🦠</h1>\n            <h3 className='tagline'>Covid Comparisons</h3>\n          </NavLink>\n        </header>\n        {this.state.selectedComparison?.category &&\n          <nav>\n            <ComparisonContainer \n              styleId='details-view'\n              handleComparisonClick={this.handleComparisonClick}\n            />\n          </nav>\n        }\n        <Switch>\n          <Route exact path='/'>\n            <section>\n              <section>\n                <h3 className='usa-overview'>\n                  <section className='overview-title'>\n                    USA Overview: &nbsp; &nbsp;\n                  </section>\n                  <section className='overview-stats'>\n                    <section className='stat-box'><span className='overview-numbers'>{ new Intl.NumberFormat('en-US').format(this.state.allUSAData.positive) }</span> cases &nbsp; &nbsp; &nbsp; &nbsp;</section>\n                    <section className='stat-box'><span className='overview-numbers'>{ new Intl.NumberFormat('en-US').format(this.state.allUSAData.death) }</span> deaths &nbsp; &nbsp; &nbsp; &nbsp;</section>\n                    <section className='stat-box'><span className='overview-numbers'>{ new Intl.NumberFormat('en-US').format(this.state.allUSAData.hospitalizedCurrently) }</span> current hospitalizations</section>\n                  </section>\n                </h3>\n              </section>\n              <main>\n                <section>\n                  <USAState \n                    date={ this.formatDate() }\n                  />\n                </section>\n                <section className='stats-container'>\n                  <Stat \n                    icon={ RiVirusFill }\n                    number={ new Intl.NumberFormat('en-US').format(this.state.selectedUSAState.positive) }\n                    title={ 'Cases' }\n                    details={ `This represents ${((this.state.selectedUSAState.positive / this.state.allUSAData.positive) * 100).toFixed(1)}% of all cases.` }\n                  />\n                  <Stat \n                    icon={ GiCoffin }\n                    number={ new Intl.NumberFormat('en-US').format(this.state.selectedUSAState.death) }\n                    title={ 'Deaths' }\n                    details={ `This represents ${((this.state.selectedUSAState.death / this.state.allUSAData.death) * 100).toFixed(1)}% of all deaths.` }\n                  />\n                  <Stat \n                    icon={ RiHospitalFill }\n                    number={ new Intl.NumberFormat('en-US').format(this.state.selectedUSAState.hospitalizedCurrently) }\n                    title={ 'Current Hospitalizations' }\n                    details={ `This represents ${((this.state.selectedUSAState.hospitalizedCurrently / this.state.allUSAData.hospitalizedCurrently) * 100).toFixed(1)}% of all current hospitalizations.` }\n                  />\n                </section>\n              </main>\n            </section>\n          </Route>\n          <Route \n            exact \n            path={`/:dropdownValue(${this.createRouteEndpoints()})`} \n            render={() => {\n              return (\n                <ComparisonDetails\n                  selection={ this.state.selectedComparison }\n                  usaStateDeaths={ this.state.selectedUSAState.death }\n                  totalUSADeaths={ this.state.allUSAData.death }\n                />\n              )\n            }}\n          >\n          </Route>\n        </Switch>\n        {!this.state.selectedComparison?.category &&\n          <nav>\n            <ComparisonContainer \n              styleId='app-view'\n              handleComparisonClick={this.handleComparisonClick}\n            />\n          </nav>\n        }\n      </>\n    )\n  }\n}\n\nexport default App;\n\n","export const fetchCurrentStateData = () => {\n  return (\n    fetch('https://api.covidtracking.com/v1/states/co/current.json')\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch data for a single state.')\n        }\n      return response.json()\n      }\n    )\n  )\n}\n\nexport const fetchAllCurrentUSAData = () => {\n  return (\n    fetch('https://api.covidtracking.com/v1/us/current.json')\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch data for the entire United States.')\n        }\n      return response.json()\n      }\n    ) \n  )\n}","interface SimplifiedStateData { date: number, state: string, \n  positive: number, hospitalizedCurrently: number, death: number }\n  \ninterface SimplifiedUSAData {\n  positive: number,\n  death: number,\n  hospitalizedCurrently: number\n}\n\nexport const simplifyAPIDataForSingleState = (data: { date: number, state: string, \n  positive: number, hospitalizedCurrently: number, death: number }): SimplifiedStateData => { \n    const stateData = {\n    date: data.date,\n    state: data.state,\n    positive: data.positive,\n    hospitalizedCurrently: data.hospitalizedCurrently,\n    death: data.death\n  }\n  return stateData;\n}\n\nexport const simplifyAPIDataForAllStates = (data: { positive: number, death: number, hospitalizedCurrently: number }): SimplifiedUSAData => {\n  const USAData = {\n    positive: data.positive,\n    death: data.death,\n    hospitalizedCurrently: data.hospitalizedCurrently\n  }\n  return USAData;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst router = <BrowserRouter basename='/covid_comparisons'><App /></BrowserRouter>\n\nReactDOM.render(\n router,\n  document.getElementById('root')\n);"],"sourceRoot":""}